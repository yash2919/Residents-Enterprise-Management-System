/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.PackagingTeam;

import business.Business;
import business.Enterprise.BuildingTeamEnterprise;
import business.Enterprise.Enterprise;
import business.Enterprise.MaintenanceTeamEnterprise;
import business.Enterprise.PackagingTeamEnterprise;
import business.Organisation.Organisation;
import business.UserAccount.UserAccount;
import business.WorkQueue.WorkRequest;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author uttkarsh1
 * 
 * 
 * 
 */ 
public class DeliveryGuyWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form DeliveryGuyWorkArea
     */
    private JPanel workArea;
    private PackagingTeamEnterprise ent;
    private Business business;
    private UserAccount userAccount;
    private Image backgroundImage;
    
    public DeliveryGuyWorkArea(JPanel userProcessContainer, UserAccount account, PackagingTeamEnterprise par, Business business) {
        initComponents();
        
    this.workArea = userProcessContainer; 
    this.ent = par;
    this.business = business;
    this.userAccount = account;
    
    try {
            backgroundImage = ImageIO.read(new File("/Users/uttkarsh/Desktop/final-project-team_titan/Final/deli.jpeg"));
        } catch (IOException e) {
            e.printStackTrace();
            // Handle the exception (e.g., log the error, show a message)
        }
    
    populateAssignedDeliveries();
    }

     @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        // Draw the background image
        g.drawImage(backgroundImage, 0, 0, this.getWidth(), this.getHeight(), this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Updatevalidation = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        AssignDelivery = new javax.swing.JTable();

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 255, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Delivery Agent Work Area Portal");

        Updatevalidation.setText("Update Delivery Status");
        Updatevalidation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdatevalidationActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        AssignDelivery.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Apt. 1", "Assigned by", "Delivery Guy", "Status", "Date Assigned"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(AssignDelivery);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 707, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 721, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(76, 76, 76)
                            .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(336, 336, 336)
                            .addComponent(Updatevalidation, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Updatevalidation, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(190, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
   populateAssignedDeliveries();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void UpdatevalidationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdatevalidationActionPerformed
        // TODO add your handling code here:
         for (WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()) {
      for (Enterprise enterprise : business.getEnterpriseDirectory().getEnterpriseList()) {
    for (Organisation organisation : enterprise.getOrganisationDirectory().getOrganisationList()) {
        for (UserAccount residentAccount : organisation.getUserAccountDirectory().getUserAccountList()) {
            // Check if the current account is the one you are interested in
            if (residentAccount.getId()!=-1 && String.valueOf(residentAccount.getId()).equals(workRequest.getMessage())) {
                // Do something with the resident information
                System.out.println("Resident Name: " + residentAccount.getUsername());
                workRequest.setStatus("Delivered");
                
                 WorkRequest newRequestToResident = new WorkRequest() {}; // Make sure this constructor exists
            newRequestToResident.setMessage("Please Collect your order");
            newRequestToResident.setSender(userAccount); 
            newRequestToResident.setStatus("Delivered!");
            newRequestToResident.setType("Delivery");
            
            residentAccount.getWorkQueue().getWorkRequestList().add(workRequest);
            JOptionPane.showMessageDialog(null,"New Service request Created to User");
            
            
            
            
                populateAssignedDeliveries();
            }
        }
    }
      }
        
}
        
        
    }//GEN-LAST:event_UpdatevalidationActionPerformed
    
    
    private void populateAssignedDeliveries() {
    // Assuming you have a table named "AssignDelivery" in the delivery guy's UI
    DefaultTableModel model = (DefaultTableModel) AssignDelivery.getModel();

    // Clear the table before populating
    model.setRowCount(0);

    // Iterate through the WorkRequests and add assigned deliveries to the table
    for (WorkRequest workRequest : userAccount.getWorkQueue().getWorkRequestList()) {
        System.out.println(workRequest);
        // Check if the work request is related to delivery assignments
//        if ("Delivery Assignment".equals(workRequest.getType()) && "In-Transit".equals(workRequest.getStatus())) {
            // Extract relevant information and add a row to the table
            Object[] row = {
                workRequest.getMessage(),
                workRequest.getSender().getUsername(),
                workRequest.getReceiver().getUsername(),
                workRequest.getStatus(),
                workRequest.getRequestDate().toString() // Adjust this line based on the data type of getRequestDate
            };
            model.addRow(row);
//        }

    }
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AssignDelivery;
    private javax.swing.JButton Updatevalidation;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}

